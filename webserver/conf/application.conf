# Configuration

application.name=api-server

# Secret keyr
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="XEcFoOrfo:Lxkj[Cy?`^nHfIG=o<d]BCHU2A[?A]GnQ8dyjP6MPS`IaXrWdg9;8q"

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
slick.dbs.default.driver= "utils.MyPostgresDriver$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://120.27.163.25/BDP"
//slick.dbs.default.db.url="jdbc:postgresql://10.47.54.175/BDP"
slick.dbs.default.db.user="postgres"
slick.dbs.default.db.password="ly@postgres&2015"
slick.dbs.default.db.maxConnections = 30
slick.dbs.default.db.minConnections = 10
slick.dbs.default.db.numThreads = 30
slick.dbs.default.db.queueSize = 10000
//空闲60s收回
slick.dbs.default.db.idleTimeout = 60000
//slick.dbs.default.db.connectionTimeout = 15000
//slick.dbs.default.db.validationTimeout = 5000



slick.dbs.pg2.driver= "utils.MyPostgresDriver$"
slick.dbs.pg2.db.driver="org.postgresql.Driver"
slick.dbs.pg2.db.url="jdbc:postgresql://120.27.162.230/BDP"
//slick.dbs.pg2.db.url="jdbc:postgresql://10.46.71.59/BDP"
slick.dbs.pg2.db.user="postgres"
slick.dbs.pg2.db.password="ly@postgres&2015"
slick.dbs.pg2.db.maxConnections = 30
slick.dbs.pg2.db.minConnections = 10
slick.dbs.pg2.db.numThreads = 30
slick.dbs.pg2.db.queueSize = 10000
slick.dbs.pg2.db.idleTimeout = 60000

# Redis configuration
//redis {
//  host = "ccd827d637514872.m.cnhza.kvstore.aliyuncs.com"
//  port = 6379
//  password = "ccd827d637514872:LYcache2015"
//  database = 1
//}

redis {
  host = "localhost"
  port = 6379
  password = ""
  database = 1
}

elasticsearch {
  cluster = "elasticsearch://10.46.71.59:9300,10.47.54.169:9300"
//  cluster = "elasticsearch://120.27.163.25:9300,120.27.163.39:9300"
}

#广告来源在展示部分的权重比例
adsource {
  #广告展示时比例权重
  weight {
    lieyingapi = 3
    gdtsdk     = 7
    yifuapi    = 0
  }
  #使用gdtsdk时广告展示的位置
  displayPosition {
    feedAdPos  = 6
    relatedAdPos = 4
    feedVideoAdPos = 4
    relatedVideoAdPos = 1
  }
}

ad {
  appid = "qidian"
  appkey = "4d14be8c24b0412d91c8d02a9079f713"
  url = "http://as.lieying.cn/api.html"
}

deleteAd{
  host = "120.55.88.11"
  port = 9000
  path = "/ml/RemoveAdsOnnid"
}

email {
  emailhostname = "smtp.126.com"
  emailpost = 465
  emailfrom = "lieyingbj@126.com"
  emailusername = "lieyingbj"
  emailpassword = "jiama369"
  emailsubject = "奇点资讯"
  emailwelcome = "欢迎使用奇点资讯APP!"
}

play.evolutions.enabled=false
play.evolutions.db.default.useLocks = false   // use locks in case we have multiple instances
play.evolutions.db.default.autoApply = false  // apply evolutions when app starts

# Filter configuration
# ~~~~~
play.http.filters=security.filters.CustomHttpFilters

//play.filters.csrf.header.bypassHeaders {
//  X-Requested-With = "*"
//  Csrf-Token = "nocheck"
//}

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["*", ".deeporiginalx.com", "0.0.0.0:9000", "127.0.0.1:9000", "121.41.112.241", "121.40.34.56", "10.251.250.229", "10.168.225.28"]
}

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=INFO

//akka.actor.default-dispatcher.fork-join-executor.parallelism-max = 64
//akka.actor.debug.receive = on

akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    serialize-messages = on
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    erialization-bindings {
      "java.lang.String" = proto
      "java.io.Serializable" = proto
      "com.google.protobuf.Message" = proto
    }
    warn-about-java-serializer-usage = off

    deployment {
      /NewsPipelineRoutees {
        router = round-robin-group
        routees.paths = [
          "akka.tcp://ProServer@10.47.54.32:2554/user/SpiderNewsPipelineServer",
          "akka.tcp://ProServer@10.47.54.15:2554/user/SpiderNewsPipelineServer",
          "akka.tcp://ProServer@10.172.201.117:2554/user/SpiderNewsPipelineServer",
          "akka.tcp://ProServer@10.172.200.95:2554/user/SpiderNewsPipelineServer"
        ]
      }

      /PersistanceRoutees {
        router = round-robin-group
        nr-of-instances = 3
        target.nodes = [
          "akka.tcp://application@10.168.69.63:2552"
          "akka.tcp://application@10.117.191.225:2552"
          "akka.tcp://application@10.168.158.115:2552"
        ]
      }
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "0.0.0.0"
      port = 2552
      send-buffer-size = 1024000b
      receive-buffer-size = 1024000b
      maximum-frame-size = 512000b
    }

    log-sent-messages = on
    log-received-messages = on
  }
}

# Akka cluster configuration
cluster {
  DispatcherPath = "akka.tcp://DispatcherSystem@10.47.54.15:2553/user/SpiderDispatcher"
//  DispatcherPath = "akka.tcp://DispatcherSystem@0.0.0.0:2553/user/SpiderDispatcher"
}