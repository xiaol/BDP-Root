akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  log-dead-letters-during-shutdown = off

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    serialize-messages = on
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    erialization-bindings {
      "java.lang.String" = proto
      "java.io.Serializable" = proto
      "com.google.protobuf.Message" = proto
    }
    warn-about-java-serializer-usage = off

    deployment {
      /NewsPipelineRoutees {
        router = round-robin-group
        nr-of-instances = 4
        target.nodes  = [
          "akka.tcp://ProServer@10.47.54.32:2554",
          "akka.tcp://ProServer@10.47.54.15:2554",
          "akka.tcp://ProServer@10.172.201.117:2554",
          "akka.tcp://ProServer@10.172.200.95:2554"
        ]
      }

      /PersistanceServer/PersistanceRoutees {
        router = round-robin-group
        routees.paths = [
          "akka.tcp://application@10.168.69.63:2552/user/PersistanceServer",
          "akka.tcp://application@10.117.191.225:2552/user/PersistanceServer",
          "akka.tcp://application@10.168.158.115:2552/user/PersistanceServer"
        ]
      }

      /SpiderNewsPipelineServer/PersistanceServer/PersistanceRoutees {
        router = round-robin-group
        routees.paths = [
          "akka.tcp://application@10.168.69.63:2552/user/PersistanceServer",
          "akka.tcp://application@10.117.191.225:2552/user/PersistanceServer",
          "akka.tcp://application@10.168.158.115:2552/user/PersistanceServer"
        ]
      }
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "0.0.0.0"
      port = 2554
      send-buffer-size = 1024000b
      receive-buffer-size = 1024000b
      maximum-frame-size = 512000b
    }

    log-sent-messages = off
    log-received-messages = off
  }

  http {
    host-connection-pool {
      max-connections = 20
      max-retries = 3
    }
    parsing {
      max-content-length = infinite
    }
    server.parsing.illegal-header-warnings = off
    client.parsing.illegal-header-warnings = off
    akka.http.host-connection-pool.client.parsing.illegal-header-warnings = off
  }
}

# Redis configuration
redis {
  host = "ccd827d637514872.m.cnhza.kvstore.aliyuncs.com"
  port = 6379
  password = "ccd827d637514872:LYcache2015"
}

//redis {
//  host = "localhost"
//  port = 6379
//  password = ""
//}

# Server configuration
RPC-Service {
  URI-ASearch = "http://60.28.29.37:8088/search?key=[KEY]"
  DB-ASearch = "http://bdp.deeporiginalx.com/v2/sps/nsr"
  DB-News = "http://bdp.deeporiginalx.com/v2/sps/asc"
}

webservices {

  asearch {
    host = "60.28.29.37"
    port = 8088
    tls = false
  }

}